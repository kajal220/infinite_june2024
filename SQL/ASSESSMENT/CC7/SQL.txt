
create database code_challenge
use code_challenge

--Create a book table with id as primary key and provide the appropriate
--data type to other attributes .isbn no should be unique for each book

create table book(
id int primary key,
title varchar(30),
author varchar(30),
isbn varchar(20) Unique Not null,
publish_date DateTime )


--drop table book


insert into book(id,title,author,isbn,publish_date) values
(1, 'My First SQL book', 'Mary Parker', '981483029127', '2012-02-22 12:08:17'), 
(2, 'My Second SQL book', 'John Mayer', '857300923713', '1972-07-03 09:22:45'), 
(3, 'My Third SQL book', 'Cary Flint', '523120967812', '2015-10-18 14:05:44') 

select * from book

---------------------------------------------------------------------------------------------------------------

-- Create the reviews table
create table reviews (
    id int primary key,
    book_id int,
    reviewer_name varchar(30),
    content varchar(100),
    rating int,
    published_date DATETIME,
    foreign key (book_id) references book(id))
 
-- Insert the data into the reviews table
insert into reviews (id, book_id, reviewer_name, content, rating, published_date) values
(1, 1, 'John Smith', 'My first review', 4, '2017-12-10 05:50:11.1'),
(2, 2, 'John Smith', 'My second review', 5, '2017-10-13 15:05:12.6'),
(3, 2, 'Alice Walker', 'Another review', 1, '2017-10-22 23:47:10')

select * from reviews
 
--------------------------------------------------------------------------------------------------------------

-- Fetch details of books written by authors whose names end with 'er'
select * from book where author like '%er'

-- Fetch Title, Author, and Reviewer Name for all books
select b.title, b.author, r.reviewer_name from book b
join reviews r ON b.id = r.book_id

--Display the  reviewer name who reviewed more than one book.
select reviewer_name from reviews group by  reviewer_name 
having count (Distinct book_id)>1

-------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------

-- Create CUSTOMERS table------
create table customers (
    id int primary key,
    NAME VARCHAR(100),
    AGE INT,
    ADDRESS VARCHAR(100),
    SALARY DECIMAL(10, 2))

-- Insert data into CUSTOMERS table--------
INSERT INTO CUSTOMERS (ID, NAME, AGE, ADDRESS, SALARY) VALUES
(1, 'Ramesh', 32, 'Ahmedabad', 2000.00),
(2, 'Khilan', 25, 'Delhi', 1500.00),
(3, 'Kaushik', 27, 'Kota', 2000.00),
(4, 'Chaitali', 23, 'Mumbai', 6500.00),
(5, 'Hardik', 24, 'Bhopal', 4500.00),
(6, 'Komal', 29, 'Indore', 8500.00),
(7, 'Muffy', 25, 'MP', 10000.00)
 

select * from customers
--------------------------------------------------------------------------------------------

 
-- Create ORDERS table-----------------------------
create table orders (
    oid int primary key,
    date DATETIME,
    CUSTOMER_ID int,
    amount decimal(10, 2),
    foreign key(CUSTOMER_ID) references customers(id)
)
 
-- Insert data into ORDERS table
insert into orders (oid, date, customer_id, amount) values
(101, '2009-10-08 00:00:00', 1, 3000.00),
(102, '2009-10-08 00:00:00', 2, 1560.00),
(103, '2009-11-20 00:00:00', 3, 1500.00),
(104, '2008-05-20 00:00:00', 4, 2060.00),
(105, '2009-10-08 00:00:00', 5, 4500.00),
(106, '2009-11-20 00:00:00', 6, 8500.00),
(107, '2008-05-20 00:00:00', 7, 10000.00)

select * from orders

--------------------------------------------------------------------

--Display the Name for the customer from above customer table  who
--live in same address which has character o anywhere in address
  select name from customers where address like '%o%'
---------------------------------------------------------------------------------------------------------

--Write a query to display the   Date,Total no of customer  placed order on same Date 
select date, count(distinct customer_id) as total_customers from orders
group by date

------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------

create table Employee (
    ID int primary key,
    name varchar(30),
    age int,
    address varchar(30),
    salary decimal(10, 2))
 
insert into Employee (ID, name, age, address, salary) values
(1, 'Ramesh', 32, 'Ahmedabad', 2000.00),
(2, 'Khilan', 25, 'Delhi', 1500.00),
(3, 'Kaushik', 27, 'Kota', 2000.00),
(4, 'Chaitali', 23, 'Mumbai', NULL),
(5, 'Hardik', 25, 'Bhopal', 6500.00),
(6, 'Komal', 27, 'MP', 8500.00),
(7, 'Muffy', 24, 'Indore', NULL);

--------------------------------------------------------------------------------------- 
--Display the Names of the Employee in lower case, whose salary is null 
select lower(name) as name from Employee
where salary is null

-----------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
 
CREATE TABLE Studentdetails (
    RegisterNo int primary key,
    Name varchar(30),
    Age int,
    Qualification varchar(30),
    MobileNo varchar(15),
    Mail_id varchar(30),
    Location varchar(30),
    Gender char(1))
 
insert into Studentdetails (RegisterNo, Name, Age, Qualification, MobileNo, Mail_id, Location, Gender) values
(1, 'Sai', 22, 'B.E', '9952836777', 'Sai@gmail.com', 'Chennai', 'M'),
(2, 'Kumar', 20, 'BSC', '7890125648', 'Kumar@gmail.com', 'Madurai', 'M'),
(3, 'Selvi', 22, 'B.Tech', '8904567342', 'selvi@gmail.com', 'Selam', 'F'),
(4, 'Nisha', 25, 'M.E', '7834672310', 'Nisha@gmail.com', 'Theni', 'F'),
(5, 'Sai Saran', 21, 'B.A', '7890345678', 'saran@gmail.com', 'Madurai', 'F'),
(6, 'Tom', 23, 'BCA', '8901234675', 'Tom@gmail.com', 'Pune', 'M')
 
----------------------------------------------------------------------------------------------------
--Write a sql server query to display the Gender,Total no of male and female 
--from the above relation   
select Gender, count(*) as Total from Studentdetails
group by Gender
------------------------------------------------------------------------------------------------ 
